// ABREVIATING OPERATORS
- in JShell, multiline expressions can be enabled with curly braces
	> mimics Java coding in IDE
	> must add the semi-colon at end of expression
- example code if semi-colon is omitted at end of expression:
jshell> {
   ...>     int result = 1
   ...> }
|  Error:
|  ';' expected
|      int result = 1
|                    ^
 
- example of incrementing by one:
jshell> {
   ...>     int result = 1;
   ...>     result = result + 1;
   ...>     System.out.print("result = " + result);
   ...> }
result = 2

// SHORTHAND FOR INCREMENTING BY ONE
ABBREVIATING OPERATOR				CODE SAMPLE
---------------------				-----------
post-fix increment operator 			result++;
compound assignment operator with + sign	result+=1;

- implementing shorthand/abbreviating operator:
jshell> {
   ...>     int result = 1;
   ...>     result++;
   ...>     System.out.print("result = " + result);
   ...> }
result = 2

// SHORTHAND FOR DECREMENTING BY ONE
ABBREVIATING OPERATOR                           CODE SAMPLE
---------------------                           -----------
post-fix increment operator                     result--;
compound assignment operator with - sign        result-=;

- implementing shorthand/abbreviating operator:
jshell> {
   ...>     int result = 1;
   ...>     result--;
   ...>     System.out.print("result = " + result);
   ...> }
result = 0

- can also use multiplication and division with compounding operator:
jshell> {
   ...>     double result = 10;
   ...>     result /= 5.5;
   ...>     System.out.print("result = " + result);
   ...> }
result = 1.8181818181818181
jshell> {
   ...>     double result = 10;
   ...>     result *= 5.5;
   ...>     System.out.print("result = " + result);
   ...> }
result = 55.0

